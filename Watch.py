import turtle
import time

hour = turtle.Turtle()
minute = turtle.Turtle()
second = turtle.Turtle()
clockFace = turtle.Turtle()
hour.ht()
minute.ht()
second.ht()
clockFace.ht()
S = turtle.Screen()
minute.left(90)
second.right(180)
def hourArrow():
    hour.begin_fill()
    hour.right(90)
    hour.fd(5)
    hour.left(90)
    hour.forward(50)
    hour.left(90)
    hour.forward(10)
    hour.left(90)
    hour.forward(50)
    hour.left(90)
    hour.forward(5)
    hour.right(90)
    hour.end_fill()
    
def minuteArrow():
    minute.begin_fill()
    minute.right(90)
    minute.fd(4)
    minute.left(90)
    minute.forward(100)
    minute.left(90)
    minute.forward(8)
    minute.left(90)
    minute.forward(100)
    minute.left(90)
    minute.fd(4)
    minute.right(90)
    minute.end_fill()
    
def secondArrow():
    second.begin_fill()
    second.right(90)
    second.fd(2.5)
    second.left(90)
    second.forward(200)
    second.left(90)
    second.forward(5)
    second.left(90)
    second.forward(200)
    second.left(90)
    second.forward(2.5)
    second.right(90)
    second.end_fill()
    
def cf():
    clockFace.up()
    for i in range(1, 13):
        clockFace.seth(90 - i * 30)
        clockFace.fd(201)
        clockFace.write(i, False, align = "center", font = ("Arial", 18, "normal"))
        clockFace.back(201)

S.tracer(0,0)
while True:
    cf()
    t = time.time()
    t = time.localtime(t)
    second.clear()
    second.seth(90-t.tm_sec*6)
    secondArrow()

    minute.clear()
    minute.seth(90-t.tm_min*6)
    minuteArrow()

    hour.clear()
    hour.seth(90-t.tm_hour*30)
    hourArrow()
    S.update()